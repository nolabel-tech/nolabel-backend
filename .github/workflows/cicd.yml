name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build-and-push-docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            nolabelregistry/${{ github.repository }}:latest
            nolabelregistry/${{ github.repository }}:${{ github.sha }}

  update-and-upload-helm-chart:
    needs: build-and-push-docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update Helm chart
        run: |
          sed -i "s|image: .*|image: nolabelregistry/${{ github.repository }}:${{ github.sha }}|" ./helm/values.yaml
          cat ./helm/values.yaml

      - name: Package Helm chart
        run: helm package ./helm

      - name: Upload Helm chart
        uses: actions/upload-artifact@v2
        with:
          name: ${{ github.repository }}
          path: ${{ github.repository }}-*.tgz

  update-argo-cd-application:
    needs: update-and-upload-helm-chart
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Update Argo CD application file
        run: |
          sed -i "s|image: .*|image: nolabelregistry/${{ github.repository }}:${{ github.sha }}|" ./path/to/app.yaml
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          git commit -am "Update image tag to ${{ github.sha }}"
          git push

  trigger-argocd:
    needs: update-argo-cd-application
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Argo CD
        run: curl -X POST ${{ secrets.ARGOCD_WEBHOOK_URL }}
